// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/golovanevvs/confidant/internal/server/repository (interfaces: IAccountRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/golovanevvs/confidant/internal/server/model"
)

// MockIAccountRepository is a mock of IAccountRepository interface.
type MockIAccountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountRepositoryMockRecorder
}

// MockIAccountRepositoryMockRecorder is the mock recorder for MockIAccountRepository.
type MockIAccountRepositoryMockRecorder struct {
	mock *MockIAccountRepository
}

// NewMockIAccountRepository creates a new mock instance.
func NewMockIAccountRepository(ctrl *gomock.Controller) *MockIAccountRepository {
	mock := &MockIAccountRepository{ctrl: ctrl}
	mock.recorder = &MockIAccountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccountRepository) EXPECT() *MockIAccountRepositoryMockRecorder {
	return m.recorder
}

// LoadAccountID mocks base method.
func (m *MockIAccountRepository) LoadAccountID(arg0 context.Context, arg1, arg2 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadAccountID", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadAccountID indicates an expected call of LoadAccountID.
func (mr *MockIAccountRepositoryMockRecorder) LoadAccountID(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadAccountID", reflect.TypeOf((*MockIAccountRepository)(nil).LoadAccountID), arg0, arg1, arg2)
}

// SaveAccount mocks base method.
func (m *MockIAccountRepository) SaveAccount(arg0 context.Context, arg1 model.Account) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAccount", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveAccount indicates an expected call of SaveAccount.
func (mr *MockIAccountRepositoryMockRecorder) SaveAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAccount", reflect.TypeOf((*MockIAccountRepository)(nil).SaveAccount), arg0, arg1)
}
