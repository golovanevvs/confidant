// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/golovanevvs/confidant/internal/server/repository (interfaces: IManageRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIManageRepository is a mock of IManageRepository interface.
type MockIManageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIManageRepositoryMockRecorder
}

// MockIManageRepositoryMockRecorder is the mock recorder for MockIManageRepository.
type MockIManageRepositoryMockRecorder struct {
	mock *MockIManageRepository
}

// NewMockIManageRepository creates a new mock instance.
func NewMockIManageRepository(ctrl *gomock.Controller) *MockIManageRepository {
	mock := &MockIManageRepository{ctrl: ctrl}
	mock.recorder = &MockIManageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIManageRepository) EXPECT() *MockIManageRepositoryMockRecorder {
	return m.recorder
}

// CloseDB mocks base method.
func (m *MockIManageRepository) CloseDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseDB indicates an expected call of CloseDB.
func (mr *MockIManageRepositoryMockRecorder) CloseDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseDB", reflect.TypeOf((*MockIManageRepository)(nil).CloseDB))
}
